
name: Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}

    - name: Set Poetry config
      run: |
        poetry config --local virtualenvs.in-project false
        poetry config --local virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Test with pytest
      run: poetry run pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}-lint
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}-lint

      - name: Set Poetry config
        run: |
          poetry config --local virtualenvs.in-project false
          poetry config --local virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Mypy
        run: poetry run mypy dict_typer tests/*

      - name: Flake8
        run: poetry run flake8 dict_typer tests/*
